// Code generated by mockery v2.12.2. DO NOT EDIT.

package transaction

import (
	mock "github.com/stretchr/testify/mock"

	aop "github.com/alibaba/ioc-golang/aop"

	testing "testing"
)

// mockContextIOCInterface is an autogenerated mock type for the contextIOCInterface type
type mockContextIOCInterface struct {
	mock.Mock
}

// addSuccessfullyCalledInvocationCtx provides a mock function with given fields: ctx
func (_m *mockContextIOCInterface) addSuccessfullyCalledInvocationCtx(ctx *aop.InvocationContext) {
	_m.Called(ctx)
}

// failed provides a mock function with given fields: err
func (_m *mockContextIOCInterface) failed(err error) {
	_m.Called(err)
}

// finish provides a mock function with given fields:
func (_m *mockContextIOCInterface) finish() {
	_m.Called()
}

// getEntranceMethod provides a mock function with given fields:
func (_m *mockContextIOCInterface) getEntranceMethod() string {
	ret := _m.Called()

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// newMockContextIOCInterface creates a new instance of mockContextIOCInterface. It also registers the testing.TB interface on the mock and a cleanup function to assert the mocks expectations.
func newMockContextIOCInterface(t testing.TB) *mockContextIOCInterface {
	mock := &mockContextIOCInterface{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
