//go:build !ignore_autogenerated
// +build !ignore_autogenerated

// Code generated by iocli

package main

import (
	autowire "github.com/alibaba/ioc-golang/autowire"
	normal "github.com/alibaba/ioc-golang/autowire/normal"
	singleton "github.com/alibaba/ioc-golang/autowire/singleton"
	util "github.com/alibaba/ioc-golang/autowire/util"
)

func init() {
	normal.RegisterStructDescriptor(&autowire.StructDescriptor{
		Factory: func() interface{} {
			return &app_{}
		},
	})
	singleton.RegisterStructDescriptor(&autowire.StructDescriptor{
		Factory: func() interface{} {
			return &App{}
		},
	})
	normal.RegisterStructDescriptor(&autowire.StructDescriptor{
		Factory: func() interface{} {
			return &serviceImpl1_{}
		},
	})
	singleton.RegisterStructDescriptor(&autowire.StructDescriptor{
		Factory: func() interface{} {
			return &ServiceImpl1{}
		},
	})
	normal.RegisterStructDescriptor(&autowire.StructDescriptor{
		Factory: func() interface{} {
			return &serviceImpl2_{}
		},
	})
	singleton.RegisterStructDescriptor(&autowire.StructDescriptor{
		Factory: func() interface{} {
			return &ServiceImpl2{}
		},
	})
	normal.RegisterStructDescriptor(&autowire.StructDescriptor{
		Factory: func() interface{} {
			return &serviceStruct_{}
		},
	})
	singleton.RegisterStructDescriptor(&autowire.StructDescriptor{
		Factory: func() interface{} {
			return &ServiceStruct{}
		},
	})
}

type app_ struct {
	Run_ func()
}

func (a *app_) Run() {
	a.Run_()
}

type serviceImpl1_ struct {
	Hello_ func()
}

func (s *serviceImpl1_) Hello() {
	s.Hello_()
}

type serviceImpl2_ struct {
	Hello_ func()
}

func (s *serviceImpl2_) Hello() {
	s.Hello_()
}

type serviceStruct_ struct {
	GetString_ func(name string) string
}

func (s *serviceStruct_) GetString(name string) string {
	return s.GetString_(name)
}
func GetApp() (*App, error) {
	i, err := singleton.GetImpl(util.GetSDIDByStructPtr(new(App)))
	if err != nil {
		return nil, err
	}
	impl := i.(*App)
	return impl, nil
}
func GetServiceImpl1() (*ServiceImpl1, error) {
	i, err := singleton.GetImpl(util.GetSDIDByStructPtr(new(ServiceImpl1)))
	if err != nil {
		return nil, err
	}
	impl := i.(*ServiceImpl1)
	return impl, nil
}
func GetServiceImpl2() (*ServiceImpl2, error) {
	i, err := singleton.GetImpl(util.GetSDIDByStructPtr(new(ServiceImpl2)))
	if err != nil {
		return nil, err
	}
	impl := i.(*ServiceImpl2)
	return impl, nil
}
func GetServiceStruct() (*ServiceStruct, error) {
	i, err := singleton.GetImpl(util.GetSDIDByStructPtr(new(ServiceStruct)))
	if err != nil {
		return nil, err
	}
	impl := i.(*ServiceStruct)
	return impl, nil
}
